[{"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/index.js":"1","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/reportWebVitals.js":"2","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/App.js":"3","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/MainContainer.js":"4","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/NavBar.js":"5","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutForm.js":"6","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExercisePage.js":"7","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExerciseDetail.js":"8","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutDetail.js":"9","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutsPage.js":"10","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutEditForm.js":"11","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/Home.js":"12","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExerciseList.js":"13","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutsList.js":"14","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/Search.js":"15","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/MapContainer.js":"16","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutCard.js":"17","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExerciseCard.js":"18","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ScrollToTop.js":"19","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/Profile.js":"20","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/Weight.js":"21","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/BMI.js":"22","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/WorkoutDays.js":"23","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/Charts.js":"24","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/NewWeightForm.js":"25"},{"size":600,"mtime":1611608742006,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1611269599838,"results":"28","hashOfConfig":"27"},{"size":226,"mtime":1611436257835,"results":"29","hashOfConfig":"27"},{"size":2558,"mtime":1611690144644,"results":"30","hashOfConfig":"27"},{"size":1544,"mtime":1611696772515,"results":"31","hashOfConfig":"27"},{"size":2160,"mtime":1611698719722,"results":"32","hashOfConfig":"27"},{"size":982,"mtime":1611627221517,"results":"33","hashOfConfig":"27"},{"size":950,"mtime":1611612758141,"results":"34","hashOfConfig":"27"},{"size":2429,"mtime":1611696964739,"results":"35","hashOfConfig":"27"},{"size":930,"mtime":1611702074756,"results":"36","hashOfConfig":"27"},{"size":2214,"mtime":1611698740374,"results":"37","hashOfConfig":"27"},{"size":336,"mtime":1611672618210,"results":"38","hashOfConfig":"27"},{"size":801,"mtime":1611626547088,"results":"39","hashOfConfig":"27"},{"size":493,"mtime":1611624600375,"results":"40","hashOfConfig":"27"},{"size":495,"mtime":1611619966243,"results":"41","hashOfConfig":"27"},{"size":1529,"mtime":1611672518624,"results":"42","hashOfConfig":"27"},{"size":824,"mtime":1611601863136,"results":"43","hashOfConfig":"27"},{"size":1955,"mtime":1611614962826,"results":"44","hashOfConfig":"27"},{"size":763,"mtime":1611627113205,"results":"45","hashOfConfig":"27"},{"size":1146,"mtime":1611700431532,"results":"46","hashOfConfig":"27"},{"size":2131,"mtime":1611713756742,"results":"47","hashOfConfig":"27"},{"size":2580,"mtime":1611713758695,"results":"48","hashOfConfig":"27"},{"size":2320,"mtime":1611693664167,"results":"49","hashOfConfig":"27"},{"size":1054,"mtime":1611714461565,"results":"50","hashOfConfig":"27"},{"size":1909,"mtime":1611710826788,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"e94dh",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"106"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/index.js",[],["111","112"],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/reportWebVitals.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/App.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/MainContainer.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/NavBar.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutForm.js",["113","114","115"],"import React, { useState } from \"react\"\nimport {useParams, useHistory} from \"react-router-dom\"\n\n\nfunction WorkoutForm(){\n    const [workout, setWorkout] = useState(null);\n    const params = useParams()\n    const history = useHistory()\n\n    const [name, setName] = useState(\"\")\n    const [date, setDate] = useState(\"\")\n    const [notes, setNotes] = useState(\"\")\n    const exercises = []\n\n\n    // console.log(params)\n\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        \n        const formData = {\n            name,\n            date,\n            notes, \n            exercises\n        }\n\n\n\n        \n            fetch(`http://localhost:3000/workouts/`, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(formData)\n            })\n            .then(r => r.json())\n            .then((newWorkout) => {\n                history.push(`/workouts/${newWorkout.id}`)\n            })\n        \n    }   \n\n   \n    return(\n        <section>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <h3>Create New Workout</h3>\n                <label>\n                    Name Your Workout  \n                </label>             \n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                /><br></br>\n                <label>Date of Workout</label>\n                <input \n                    type=\"date\"\n                    name=\"date\"\n                    value={date}\n                    onChange={(e) => setDate(e.target.value)}\n                /><br></br>\n                <label>Any notes about the Workout</label>\n                <textarea \n                    type=\"textarea\"\n                    name=\"notes\"\n                    value={notes}\n                    onChange={(e) => setNotes(e.target.value)}\n                /><br></br>\n                <button type=\"submit\">Submit</button>\n                \n            </form>\n\n        </section>\n    )\n}\n\n\nexport default WorkoutForm","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExercisePage.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExerciseDetail.js",["116","117"],"import React, { useEffect, useState} from \"react\"\nimport {Link, useParams} from \"react-router-dom\"\n\nfunction ExerciseDetail(){\n    const [selectedExercise, setExercise] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false)\n    const params = useParams();\n\n    useEffect(() => {\n        fetch(`${process.env.REACT_APP_API_BASE_URL}/exercises/${params.id}`)\n        .then(r => r.json())\n        .then(data => {\n            setExercise(data)\n            setIsLoaded(true)\n        })\n    }, [params.id])\n\n    if (!isLoaded) return <h2>Loading...</h2>;\n    \n    const {exercise, equipment, exerciseType, majorMuscle, example} = selectedExercise\n\n    return(\n        <>\n        <h1> Exercise Detail </h1>\n        <h1>{exercise}</h1>\n        <p>You will need {equipment}</p>\n        <p>Type of Exercise: {exerciseType}</p>\n        <br></br>\n        <img src={example} alt={exercise}></img>\n        </>\n    )\n }\n\nexport default ExerciseDetail","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutDetail.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutsPage.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutEditForm.js",["118"],"import React, {useState } from \"react\"\nimport {useParams, useHistory} from \"react-router-dom\"\n\nfunction WorkoutEditForm(props){\n    // const [workout, setWorkout] = useState(null);\n    const params = useParams()\n    const history = useHistory()\n    // console.log(history.location.state.workout.workout)\n    const wkt = history.location.state.workout;\n\n    const [name, setName] = useState(wkt.name)\n    const [date, setDate] = useState(wkt.date)\n    const [notes, setNotes] = useState(wkt.notes)\n\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        \n        const formData = {\n            name,\n            date,\n            notes            \n        }\n        \n            fetch(`${process.env.REACT_APP_API_BASE_URL}/workouts/${wkt.id}`, {\n                method: \"PATCH\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify(formData)\n            })\n            .then(r => r.json())\n            .then((newWorkout) => {\n                history.push(`/workouts/${wkt.id}`)\n            })\n    }   \n\n       return(\n        <section>\n            <form className=\"form\" onSubmit={handleSubmit}>\n                <h3>Edit this Workout</h3>\n                <label>\n                    Name of workout:    \n                </label>             \n                <input \n                    type=\"text\"\n                    name=\"name\"\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                />\n                <label>Date of Workout</label>\n                <input \n                    type=\"date\"\n                    name=\"date\"\n                    value={date}\n                    onChange={(e) => setDate(e.target.value)}\n\n                />\n                <label>Any notes about the Workout</label>\n                <textarea \n                    type=\"textarea\"\n                    name=\"notes\"\n                    value={notes}\n                    onChange={(e) => setNotes(e.target.value)}\n                />\n                <button type=\"submit\">Submit</button>\n                \n            </form>\n\n        </section>\n    )\n}\n\n\nexport default WorkoutEditForm","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/Home.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExerciseList.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutsList.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/Search.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/MapContainer.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/WorkoutRelated/WorkoutCard.js",["119","120","121","122"],"import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport { Route, useRouteMatch } from \"react-router-dom\";\n\n\nfunction WorkoutCard({workout}){\n    const {date, notes, name, exercises, id} = workout\n    // console.log(id)\n    \n    \n    const exerciseObj = () => {\n        if (exercises[0]) {\n            return exercises.map(exercise => {\n                return <li key={exercise.id}>\n                            {exercise.exercise}\n                        </li>})}\n        else {return <p>Add some exercise to this workout!</p>}\n    }\n\n    return (\n        <div className=\"workouts-card\">\n            <h2>\n                <Link to={`/workouts/${id}`}>{name}</Link> on {date}\n            </h2>\n            {/* <ul>{exerciseObj()}</ul> */}\n            \n        </div>\n        \n    )\n}\n\nexport default WorkoutCard;","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ExerciseRelated/ExerciseCard.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ScrollToTop.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/Profile.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/Weight.js",["123"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction Weight(){\n    const [chartData, setChartData] = useState({})\n    const [weights, setWeights] = useState([])\n    const [dates, setDates] = useState([])\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/weights`)\n        .then(r => r.json())\n        .then((weightObj) => renderWeights(weightObj))\n    }, [])\n\n    function renderWeights(weightObj){\n        const weightArray = weightObj.map((oneWeight) => oneWeight.weight)\n            setWeights(weightArray)\n            const datesArray = weightObj.map((oneWeight) => oneWeight.date)\n            setDates(datesArray)\n    }\n    \n    console.log(weights)\n    console.log(dates)\n\n    function chart(){\n        setChartData( \n            {\n                labels: dates,\n            datasets: [\n                {\n                    label: 'Weight (lbs)',\n                    data: weights,\n                    fill: false,\n                    lineTension: 0,\n                    backgroundColor: \"#2085d8\",\n                    borderColor: \"#2085d8\",\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [weights, dates])\n\n    return(\n        <div className=\"chart\">\n            <Line \n                data={chartData} \n                options={{\n                    responsive: true,\n                    title: { text: \"DAILY WEIGHT TREND\", display:true },       \n                }} \n            />\n        </div>\n    );\n}\n\nexport default Weight;","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/BMI.js",["124","125"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction BMI(){\n    const [chartData, setChartData] = useState({})\n    const [weights, setWeights] = useState([])\n    const [dates, setDates] = useState([])\n    const [bmi, setBmi] = useState([])\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/weights`)\n        .then(r => r.json())\n        .then((weightObj) => renderWeights(weightObj))\n    }, [])\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/users/1`)\n        .then(r => r.json())\n        .then((userObj) => calculateBMI(userObj.height))\n    }, [weights])\n\n    function renderWeights(weightObj){\n        const weightArray = weightObj.map((oneWeight) => oneWeight.weight)\n            setWeights(weightArray)\n            const datesArray = weightObj.map((oneWeight) => oneWeight.date)\n            setDates(datesArray)\n    }\n\n    function calculateBMI(height){\n        const numHeight = height.replace(\"'\", \" \")\n        const heightInches = parseInt(numHeight * 12)\n        const bmiArray = weights.map( weight => {\n            return ( (weight / heightInches / heightInches ) * 703).toFixed(1)\n        })\n        setBmi(bmiArray)\n    }\n    \n\n    function chart(){\n        setChartData({\n            labels: dates,\n            datasets: [\n                {\n                    label: 'BMI',\n                    data: bmi,\n                    fill: false,\n                    lineTension: 0.1,\n                    backgroundColor: \"#2085d8\",\n                    borderColor: \"#2085d8\",\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [ bmi, dates])\n\n    return(\n        <div className=\"chart\">\n            <Line \n                data={chartData} \n                options={{\n                    responsive: true,\n                    title: { text: \"DAILY BMI TREND\", display:true },       \n                }} \n            />\n            \n        </div>\n    );\n}\n\nexport default BMI;","/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/WorkoutDays.js",["126"],"import React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nfunction WorkoutDays(){\n    const [chartData, setChartData] = useState({})\n    const [weights, setWeights] = useState([])\n    const [dates, setDates] = useState([])\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/weights`)\n        .then(r => r.json())\n        .then((weightObj) => {\n            const weightArray = weightObj.map((oneWeight) => oneWeight.weight)\n            setWeights(weightArray)\n            const datesArray = weightObj.map((oneWeight) => oneWeight.date)\n            setDates(datesArray)\n        })\n    }, [])\n    \n    console.log(weights)\n    console.log(dates)\n\n    function chart(){\n        setChartData({\n            labels: [\n                \"2020-12-12\",\n                \"2020-12-13\",\n                \"2020-12-14\",\n                \"2020-12-16\",\n                \"2020-12-17\",\n                \"2020-12-18\",\n                \"2020-12-27\",\n                \"2020-12-29\",\n                \"2021-01-02\"],\n            datasets: [\n                {\n                    label: 'Weight (lbs)',\n                    data: weights,\n                    fill: false,\n                    lineTension: 0,\n                    backgroundColor: \"#2085d8\",\n                    borderColor: \"#2085d8\",\n                    borderCapStyle: \"butt\",\n                    borderDash: [],\n                    borderDashOffset: 0.0,\n                    borderJoinStyle: \"miter\",\n                    pointBorderColor: \"#2085d8\",\n                    pointBackgroundColor: \"#FFF\",\n                    pointBorderWidth: 1,\n                    pointHoverRadius: 5,\n                    pointHoverBackgroundColor: \"#2f3640\",\n                    pointHoverBorderColor: \"#2085d8\",\n                    pointHoverBorderWidth: 2,\n                    pointRadius: 1,\n                    pointHitRadius: 10,\n                }\n            ]\n        })\n    }\n\n    useEffect(() => {\n        chart()\n    }, [])\n\n    return(\n        <div className=\"chart\">\n            <Line \n                data={chartData} \n                options={{\n                    responsive: true,\n                    title: { text: \"DAILY WEIGHT TREND\", display:true },       \n                }} \n            />\n        </div>\n    );\n}\n\nexport default WorkoutDays;",["127","128"],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/Charts.js",[],"/Users/fredahon/Flatiron/code/module_4/project_week/krunch/src/components/ProfileRelated/NewWeightForm.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":6,"column":12,"nodeType":"135","messageId":"136","endLine":6,"endColumn":19},{"ruleId":"133","severity":1,"message":"137","line":6,"column":21,"nodeType":"135","messageId":"136","endLine":6,"endColumn":31},{"ruleId":"133","severity":1,"message":"138","line":7,"column":11,"nodeType":"135","messageId":"136","endLine":7,"endColumn":17},{"ruleId":"133","severity":1,"message":"139","line":2,"column":9,"nodeType":"135","messageId":"136","endLine":2,"endColumn":13},{"ruleId":"133","severity":1,"message":"140","line":20,"column":47,"nodeType":"135","messageId":"136","endLine":20,"endColumn":58},{"ruleId":"133","severity":1,"message":"138","line":6,"column":11,"nodeType":"135","messageId":"136","endLine":6,"endColumn":17},{"ruleId":"133","severity":1,"message":"141","line":3,"column":10,"nodeType":"135","messageId":"136","endLine":3,"endColumn":15},{"ruleId":"133","severity":1,"message":"142","line":3,"column":17,"nodeType":"135","messageId":"136","endLine":3,"endColumn":30},{"ruleId":"133","severity":1,"message":"143","line":7,"column":18,"nodeType":"135","messageId":"136","endLine":7,"endColumn":23},{"ruleId":"133","severity":1,"message":"144","line":11,"column":11,"nodeType":"135","messageId":"136","endLine":11,"endColumn":22},{"ruleId":"145","severity":1,"message":"146","line":57,"column":8,"nodeType":"147","endLine":57,"endColumn":24,"suggestions":"148"},{"ruleId":"145","severity":1,"message":"149","line":20,"column":8,"nodeType":"147","endLine":20,"endColumn":17,"suggestions":"150"},{"ruleId":"145","severity":1,"message":"146","line":70,"column":8,"nodeType":"147","endLine":70,"endColumn":21,"suggestions":"151"},{"ruleId":"145","severity":1,"message":"146","line":63,"column":8,"nodeType":"147","endLine":63,"endColumn":10,"suggestions":"152"},{"ruleId":"129","replacedBy":"153"},{"ruleId":"131","replacedBy":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'workout' is assigned a value but never used.","Identifier","unusedVar","'setWorkout' is assigned a value but never used.","'params' is assigned a value but never used.","'Link' is defined but never used.","'majorMuscle' is assigned a value but never used.","'Route' is defined but never used.","'useRouteMatch' is defined but never used.","'notes' is assigned a value but never used.","'exerciseObj' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'chart'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'calculateBMI'. Either include it or remove the dependency array.",["158"],["159"],["160"],["155"],["156"],"no-global-assign","no-unsafe-negation",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [weights, dates, chart]",{"range":"169","text":"170"},"Update the dependencies array to be: [calculateBMI, weights]",{"range":"171","text":"172"},"Update the dependencies array to be: [bmi, chart, dates]",{"range":"173","text":"174"},"Update the dependencies array to be: [chart]",{"range":"175","text":"176"},[1788,1804],"[weights, dates, chart]",[617,626],"[calculateBMI, weights]",[2233,2246],"[bmi, chart, dates]",[1986,1988],"[chart]"]